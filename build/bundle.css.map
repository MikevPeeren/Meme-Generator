{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../MemeGenerator.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import MemeGenerator from './MemeGenerator.svelte';\n</script>\n\n<style>\n    main {\n        text-align: center;\n        padding: 1em;\n        max-width: 240px;\n        margin: 0 auto;\n    }\n\n    h1 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n</style>\n\n<main>\n    <h1>Meme Generator!</h1>\n\n    <MemeGenerator />\n</main>\n",
    "<script>\n    import { DOWNLOAD_MEME, TOP_TEXT, BOTTOM_TEXT, FONT_SIZE_LABEL, COLOR_IN_HEX } from './constants/general.js';\n\n    let image = null;\n    let file = null;\n\n    let textTop = '';\n    let textBottom = '';\n    let warningText = '';\n\n    let fontSize = 200;\n    let textColor = '#ffffff   ';\n\n    const reader = new FileReader();\n\n    let memeCanvas;\n\n    function uploadImage(event) {\n        // For future redrawing purposes\n        image = new Image();\n        file = event.target.files[0];\n\n        drawCanvas(image, event.target.files[0]);\n    }\n\n    function drawCanvas(image, file, placeTextTop = false, placeTextBottom = false) {\n        const memeCanvasContext = memeCanvas.getContext('2d');\n\n        if (warningText !== '') warningText = '';\n\n        reader.readAsDataURL(file);\n\n        reader.onload = function(event) {\n            if (event.target.readyState == FileReader.DONE) {\n                image.src = event.target.result;\n                memeCanvas.width = image.width;\n                memeCanvas.height = image.height;\n                memeCanvasContext.drawImage(image, 0, 0);\n\n                if (placeTextTop) placeText('top');\n                if (placeTextBottom) placeText('bottom');\n            }\n        };\n    }\n\n    function placeText(placement) {\n        if (!image) {\n            warningText = 'Please upload an image first';\n            return;\n        }\n\n        if (warningText !== '') warningText = '';\n\n        const memeCanvasContext = memeCanvas.getContext('2d');\n\n        memeCanvasContext.font = `${fontSize}px Comic Sans`;\n        memeCanvasContext.fillStyle = textColor;\n        memeCanvasContext.textAlign = 'center';\n\n        if (textTop === '' && textBottom === '') return;\n\n        // Minus 200 because font size is 200px\n        const centeredText = memeCanvas.width / 2;\n\n        if (placement === 'top') memeCanvasContext.fillText(textTop, centeredText, 150);\n        if (placement === 'bottom') memeCanvasContext.fillText(textBottom, centeredText, memeCanvas.height - 100);\n    }\n\n    function saveMeme() {\n        const downloadButton = document.getElementById('downloadButton');\n        const dataURL = memeCanvas.toDataURL('image/png');\n        downloadButton.href = dataURL;\n    }\n</script>\n\n<style>\n    input {\n        padding: 10px;\n        margin: 10px;\n        text-align: center;\n        opacity: 80%;\n        border-radius: 5px;\n    }\n\n    .memeCanvas {\n        margin: 10px;\n        border: 1px solid #000000;\n        border-radius: 5px;\n        width: 500px;\n        height: 400px;\n    }\n\n    .errorMessage {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 1.5em;\n        font-weight: 100;\n        margin-bottom: 15px;\n    }\n\n    .button {\n        padding: 10px;\n        margin: 10px;\n        text-align: center;\n        opacity: 80%;\n        border-radius: 5px;\n    }\n\n    .container {\n        display: inline-block;\n    }\n\n    .containerDivs {\n        float: left;\n    }\n</style>\n\n<div>\n    <label>Upload Your Image</label>\n\n    <div>\n        <input on:change={event => uploadImage(event)} type=\"file\" id=\"selectedFile\" style=\"display: none;\" />\n        <input type=\"button\" value=\"Browse...\" onclick=\"document.getElementById('selectedFile').click();\" />\n        <br />\n        <a href=\"#\" class=\"button\" id=\"downloadButton\" on:click={() => saveMeme()} download=\"meme.png\">\n            {DOWNLOAD_MEME}\n        </a>\n    </div>\n\n    <canvas bind:this={memeCanvas} class=\"memeCanvas\" id=\"memeCanvas\" />\n\n    <div class=\"errorMessage\">{warningText}</div>\n\n    <div class=\"container\">\n        <div class=\"containerDivs\">\n            <label for=\"top-text\">{TOP_TEXT}</label>\n            <input id=\"top-text\" maxlength=\"20\" bind:value={textTop} on:change={() => placeText('top')} />\n        </div>\n        <div class=\"containerDivs\">\n            <label for=\"bottom-text\">{BOTTOM_TEXT}</label>\n            <input id=\"bottom-text\" maxlength=\"20\" bind:value={textBottom} on:change={() => placeText('bottom')} />\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"containerDivs\">\n            <label for=\"font-size\">{FONT_SIZE_LABEL}</label>\n            <input\n                id=\"font-size\"\n                maxlength=\"10\"\n                bind:value={fontSize}\n                on:change={() => drawCanvas(image, file, true, true)} />\n        </div>\n        <div class=\"containerDivs\">\n            <label for=\"text-color\">{COLOR_IN_HEX}</label>\n            <input id=\"text-color\" maxlength=\"10\" bind:value={textColor} />\n        </div>\n    </div>\n    <br />\n    <input type=\"button\" value=\"Clear Text\" on:click={() => drawCanvas(image, file)} />\n</div>\n"
  ],
  "names": [],
  "mappings": "AAKI,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAClB,CAAC,AAED,EAAE,cAAC,CAAC,AACA,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACvB,IAAI,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC;ACqDD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,WAAW,cAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,aAAa,cAAC,CAAC,AACX,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,IAAI,AACvB,CAAC,AAED,OAAO,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,UAAU,cAAC,CAAC,AACR,OAAO,CAAE,YAAY,AACzB,CAAC,AAED,cAAc,cAAC,CAAC,AACZ,KAAK,CAAE,IAAI,AACf,CAAC"
}